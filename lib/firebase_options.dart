// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  final firebaseProjectId = 'authentication-8ec6b';
  final firebaseMessagingSenderId = '55962049663';
  final firebaseStorageBucket = 'authentication-8ec6b.appspot.com';
  final firebaseAuthDomain = 'authentication-8ec6b.firebaseapp.com';
  final firebaseIosBundleId = 'com.example.authentication';

  final firebaseWebApiKey =
      dotenv.env['FIREBASE_WEB_API_KEY'] ?? 'NOT_AVAILABLE';
  final firebaseWebApiId = dotenv.env['FIREBASE_WEB_API_ID'] ?? 'NOT_AVAILABLE';

  final firebaseAndroidApiKey =
      dotenv.env['FIREBASE_ANDROID_API_KEY'] ?? 'NOT_AVAILABLE';
  final firebaseAndroidApiId =
      dotenv.env['FIREBASE_ANDROID_API_ID'] ?? 'NOT_AVAILABLE';

  final firebaseIosApiKey =
      dotenv.env['FIREBASE_IOS_API_KEY'] ?? 'NOT_AVAILABLE';
  final firebaseIosApiId = dotenv.env['FIREBASE_IOS_API_ID'] ?? 'NOT_AVAILABLE';

  final firebaseMacosApiKey =
      dotenv.env['FIREBASE_MACOS_API_KEY'] ?? 'NOT_AVAILABLE';
  final firebaseMacosApiId =
      dotenv.env['FIREBASE_MACOS_API_ID'] ?? 'NOT_AVAILABLE';

  final firebaseWindowsApiKey =
      dotenv.env['FIREBASE_WINDOWS_API_KEY'] ?? 'NOT_AVAILABLE';
  final firebaseWindowsApiId =
      dotenv.env['FIREBASE_WINDOWS_API_ID'] ?? 'NOT_AVAILABLE';

  FirebaseOptions get web => FirebaseOptions(
        apiKey: firebaseWebApiKey,
        appId: firebaseWebApiId,
        messagingSenderId: firebaseMessagingSenderId,
        projectId: firebaseProjectId,
        authDomain: firebaseAuthDomain,
        storageBucket: firebaseStorageBucket,
      );

  FirebaseOptions get android => FirebaseOptions(
        apiKey: firebaseAndroidApiKey,
        appId: firebaseAndroidApiId,
        messagingSenderId: firebaseMessagingSenderId,
        projectId: firebaseProjectId,
        storageBucket: firebaseStorageBucket,
      );

  FirebaseOptions get ios => FirebaseOptions(
        apiKey: firebaseIosApiKey,
        appId: firebaseIosApiId,
        messagingSenderId: firebaseMessagingSenderId,
        projectId: firebaseProjectId,
        storageBucket: firebaseStorageBucket,
        iosBundleId: firebaseIosBundleId,
      );

  FirebaseOptions get macos => FirebaseOptions(
        apiKey: firebaseMacosApiKey,
        appId: firebaseMacosApiId,
        messagingSenderId: firebaseMessagingSenderId,
        projectId: firebaseProjectId,
        storageBucket: firebaseStorageBucket,
        iosBundleId: firebaseIosBundleId,
      );

  FirebaseOptions get windows => FirebaseOptions(
        apiKey: firebaseWindowsApiKey,
        appId: firebaseWindowsApiId,
        messagingSenderId: firebaseMessagingSenderId,
        projectId: firebaseProjectId,
        authDomain: firebaseAuthDomain,
        storageBucket: firebaseStorageBucket,
      );

  static FirebaseOptions get currentPlatform {
    final options =
        DefaultFirebaseOptions(); // Create an instance to access instance variables
    if (kIsWeb) {
      return options.web; // Use instance method for web options
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return options.android;
      case TargetPlatform.iOS:
        return options.ios;
      case TargetPlatform.macOS:
        return options.macos;
      case TargetPlatform.windows:
        return options.windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
